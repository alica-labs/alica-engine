#include "ConstraintCreator.h"
#include <iostream>

#include  "Plans/constraints/PlanThree1407153663917Constraints.h"

#include  "Plans/Authority/constraints/AuthorityTest1414403413451Constraints.h"

#include  "Plans/constraints/GoalPlan1402488870347Constraints.h"

#include  "Plans/constraints/MultiAgentTestMaster1413200842973Constraints.h"

#include  "Plans/constraints/MultiAgentTestPlan1413200862180Constraints.h"

#include  "Plans/constraints/SimpleTestPlan1412252439925Constraints.h"

#include  "Plans/constraints/PlanOne1407153611768Constraints.h"

#include  "Plans/constraints/AttackPlan1402488634525Constraints.h"

#include  "Plans/constraints/PlanTwo1407153645238Constraints.h"

#include  "Plans/constraints/MasterPlanTaskAssignment1407152758497Constraints.h"

#include  "Plans/Authority/constraints/AuthorityTestMaster1414403396328Constraints.h"

#include  "Plans/constraints/PlanFive1407153703092Constraints.h"

#include  "Plans/constraints/Tackle1402489318663Constraints.h"

#include  "Plans/constraints/Defend1402488893641Constraints.h"

#include  "Plans/constraints/PlanFour1407153683051Constraints.h"

#include  "Plans/constraints/MidFieldPlayPlan1402488770050Constraints.h"

#include  "Plans/constraints/MasterPlan1402488437260Constraints.h"

using namespace std;
using namespace alicaAutogenerated;

namespace alica
{

ConstraintCreator::ConstraintCreator()
{
}

ConstraintCreator::~ConstraintCreator()
{
}

shared_ptr<BasicConstraint> ConstraintCreator::createConstraint(long constraintConfId)
{
  switch (constraintConfId)
  {

    case 1402489131988:
      return make_shared<Constraint1402489131988>();
      break;

    case 1403773741874:
      return make_shared<Constraint1403773741874>();
      break;

    case 1402489174338:
      return make_shared<Constraint1402489174338>();
      break;

    case 1402489206278:
      return make_shared<Constraint1402489206278>();
      break;

    case 1402489218027:
      return make_shared<Constraint1402489218027>();
      break;

    case 1413201227586:
      return make_shared<Constraint1413201227586>();
      break;

    case 1413201389955:
      return make_shared<Constraint1413201389955>();
      break;

    case 1413201052549:
      return make_shared<Constraint1413201052549>();
      break;

    case 1413201367990:
      return make_shared<Constraint1413201367990>();
      break;

    case 1413201370590:
      return make_shared<Constraint1413201370590>();
      break;

    case 1412781693884:
      return make_shared<Constraint1412781693884>();
      break;

    case 1412781707952:
      return make_shared<Constraint1412781707952>();
      break;

    case 1412761926856:
      return make_shared<Constraint1412761926856>();
      break;

    case 1402489460549:
      return make_shared<Constraint1402489460549>();
      break;

    case 1402489462088:
      return make_shared<Constraint1402489462088>();
      break;

    case 1414403842622:
      return make_shared<Constraint1414403842622>();
      break;

    case 1402488991641:
      return make_shared<Constraint1402488991641>();
      break;

    case 1402488993122:
      return make_shared<Constraint1402488993122>();
      break;

    case 1402489065962:
      return make_shared<Constraint1402489065962>();
      break;

    case 1402489073613:
      return make_shared<Constraint1402489073613>();
      break;

    case 1402489260911:
      return make_shared<Constraint1402489260911>();
      break;

    case 1402489258509:
      return make_shared<Constraint1402489258509>();
      break;

    case 1402489278408:
      return make_shared<Constraint1402489278408>();
      break;

    case 1402500844446:
      return make_shared<Constraint1402500844446>();
      break;

    case 1402488519140:
      return make_shared<Constraint1402488519140>();
      break;

    case 1402488520968:
      return make_shared<Constraint1402488520968>();
      break;

    case 1402488558741:
      return make_shared<Constraint1402488558741>();
      break;

    case 1409218319990:
      return make_shared<Constraint1409218319990>();
      break;

    default:
      cerr << "ConstraintCreator: Unknown constraint requested: " << constraintConfId << endl;
      throw new exception();
      break;
  }
}

}
