#include <gtest/gtest.h>
#include <engine/AlicaEngine.h>
#include <engine/IAlicaClock.h>
#include "engine/IAlicaCommunication.h"
#include "engine/model/State.h"
#include "TestBehaviourCreator.h"
#include "engine/model/Behaviour.h"
#include "engine/PlanRepository.h"
#include "engine/BasicBehaviour.h"
#include "engine/IBehaviourPool.h"
#include "engine/PlanBase.h"
#include <clock/AlicaROSClock.h>
#include <communication/AlicaRosCommunication.h>
#include  "engine/DefaultUtilityFunction.h"
#include  "engine/ITeamObserver.h"
#include "engine/model/Plan.h"
#include "engine/model/RuntimeCondition.h"
#include "TestConditionCreator.h"
#include "TestConstraintCreator.h"
#include "TestUtilityFunctionCreator.h"
#include "Attack.h"
#include "MidFieldStandard.h"
#include "engine/Assignment.h"
#include "engine/collections/AssignmentCollection.h"
#include "engine/collections/StateCollection.h"
#include "ConstraintTestPlan1414068524245.h"
#include "ConstraintUsingBehaviour.h"
#include "ConstraintTestPlan1414068524245Constraint.h"
#include <thread>
#include <iostream>
#include "ConstraintTestPlanDummySolver.h"
#include "SolverType.h"
#include <engine/constraintmodul/ConstraintQuery.h>

using namespace alicaAutogenerated;

class AlicaDomainVariableTest : public ::testing::Test
{
protected:
	supplementary::SystemConfig* sc;
	alica::AlicaEngine* ae;
	alicaTests::TestBehaviourCreator* bc;
	alicaTests::TestConditionCreator* cc;
	alicaTests::TestUtilityFunctionCreator* uc;
	alicaTests::TestConstraintCreator* crc;

	virtual void SetUp()
	{
	}

	virtual void TearDown()
	{
	}
};
/**
 * Tests if Behaviour with Constraints are called
 */
TEST_F(AlicaDomainVariableTest, domainVariableTest)
{


	//this->voidTest(vec);
}

