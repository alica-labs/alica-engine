cmake_minimum_required(VERSION 2.8.3)
project(alica_test)

## Use c++ 11x std
set(CMAKE_CXX_FLAGS "-std=c++11 ${CMAKE_CXX_FLAGS}")
if (${CMAKE_EXTRA_GENERATOR} MATCHES "Eclipse CDT4")
	set(CMAKE_CXX_COMPILER_ARG1 "-std=c++11" CACHE STRING "C++ version for eclipse" FORCE)
	set(CMAKE_ECLIPSE_VERSION "4.5" CACHE STRING "Eclipse version" FORCE)
	add_definitions (-DCMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT=TRUE)
endif (${CMAKE_EXTRA_GENERATOR} MATCHES "Eclipse CDT4")

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS 
    roscpp 
    system_config 
    fsystem 
    autodiff 
    constraintsolver 
    event_handling 
    alica_engine 
    alica_ros_proxy 
    alica_dummy_proxy
)

## System dependencies are found with CMake's conventions
#find_package(Boost REQUIRED COMPONENTS program_options)



## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()


###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if you package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need


catkin_package(
  INCLUDE_DIRS autogenerated/include
  LIBRARIES autogen_code 
  CATKIN_DEPENDS alica_engine alica_ros_proxy alica_dummy_proxy
)

###########
## Build ##
###########

file(GLOB_RECURSE test_alica_SOURCES "src/test/*.cpp")
catkin_add_gtest(${PROJECT_NAME}-test ${test_alica_SOURCES})

if(TARGET ${PROJECT_NAME}-test)
## Specify additional locations of header files
## Your package locations should be listed before other locations
 include_directories(autogenerated/include ${catkin_INCLUDE_DIRS})



file(GLOB_RECURSE autogen_SOURCES "autogenerated/src/*.cpp")
 add_library(autogen_code
	${autogen_SOURCES};
 ) 
 target_link_libraries(autogen_code ${catkin_LIBRARIES})
 add_dependencies(autogen_code ${catkin_LIBRARIES})

 

## Add gtest based cpp test target and link libraries
 
add_dependencies(${PROJECT_NAME}-test ${catkin_LIBRARIES} autogen_code )
target_link_libraries(${PROJECT_NAME}-test ${catkin_LIBRARIES} autogen_code )
endif()

