cmake_minimum_required(VERSION 2.8.3)
project(alica_test)

## Use c++ 11x std
set(CMAKE_CXX_FLAGS "-std=c++11 ${CMAKE_CXX_FLAGS}")

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS roscpp system_config fsystem autodiff event_handling alica_engine alica_ros_proxy)

## System dependencies are found with CMake's conventions
#find_package(Boost REQUIRED COMPONENTS program_options)

## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()


###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if you package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
  INCLUDE_DIRS include
  LIBRARIES alica_engine 
  CATKIN_DEPENDS alica_engine alica_ros_proxy
#  DEPENDS tinyxml
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
 include_directories(autogenerated/include include test/include ${catkin_INCLUDE_DIRS})



#file(GLOB_RECURSE alica_SOURCES "src/test/*.cpp")

## Declare a cpp library
# add_library(alica_test
#	${alica_SOURCES};
# )
# target_link_libraries(alica_test ${catkin_LIBRARIES})
# add_dependencies(alica_test ${catkin_LIBRARIES})
  add_library(test_behaviour_creator
	src/Attack.cpp;
	src/AttackOpp.cpp;
	src/DefendMid.cpp;
	src/MidFieldStandard.cpp;
	src/Tackle.cpp;
	src/TestBehaviourCreator.cpp;
 ) 
   add_library(test_expression_creator
	src/TestConditionCreator.cpp;
	src/TestConstraintCreator.cpp;
	src/TestUtilityFunctionCreator.cpp;
	src/TestWorldModel.cpp
	src/SimpleTestPlan1412252439925.cpp;
	src/MultiAgentTestMaster1413200842973.cpp
	src/MultiAgentTestPlan1413200862180.cpp
	src/SimpleTestPlan1412252439925Constraint.cpp
 )

file(GLOB_RECURSE autogen_SOURCES "autogenerated/src/*.cpp")
 add_library(autogen_code
	${autogen_SOURCES};
 ) 
 target_link_libraries(autogen_code ${catkin_LIBRARIES}  alica_engine)
 add_dependencies(autogen_code ${catkin_LIBRARIES} alica_engine)


## Add gtest based cpp test target and link libraries
file(GLOB_RECURSE test_alica_SOURCES "src/test/*.cpp")
 catkin_add_gtest(${PROJECT_NAME}-test ${test_alica_SOURCES})
 if(TARGET ${PROJECT_NAME}-test)
   add_dependencies(${PROJECT_NAME}-test ${catkin_LIBRARIES} autogen_code)
   target_link_libraries(${PROJECT_NAME}-test ${catkin_LIBRARIES} system_config alica_engine test_behaviour_creator alica_ros_proxy test_expression_creator autogen_code)
 endif()

